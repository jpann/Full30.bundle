#!/usr/bin/env python

import sys
import os
from io import open

#
# Get plugin's folders such as the Shared folder so it can be added to the python path.
BUNDLE_PATH = os.path.join(os.getcwd().lstrip('\\\?').split('Plug-in Support')[0], 'Plug-ins', 'Full30.bundle')
MODULE_PATH = os.path.join(BUNDLE_PATH, 'Contents', 'Libraries', 'Shared')
SUPPORT_PATH = os.path.join(BUNDLE_PATH.split('Plug-ins')[0], 'Plug-in Support', 'Data', 'com.plexapp.plugins.fullthirty')

#
# Add Plugin's Shared Code folder to python module path.
# This is so we can import cfscrape, and other external libraries in the URL Service.
if MODULE_PATH not in sys.path:
    sys.path.append(MODULE_PATH)
    Log.Debug('*' * 80)
    Log.Debug('* Library path below, added to sys.path, by domain.pys')
    Log.Debug('* {}'.format(MODULE_PATH))
    Log.Debug('*' * 80)

#import domain as Domain
import cfscrape

scraper = cfscrape.create_scraper()

#
# Get page content using cfscrape. This is slower since it works around Cloudflare anti-bot.
def GetPage(url):
    return scraper.get(url).content

#
# Get page content using Plex's built-in HTTP.Request
def GetPageUsingPlex(url):
    return HTTP.Request(url, cacheTime = CACHE_1HOUR).content

#
# Get thumbnail using cfscrape
def GetThumb(url):
  try:
    Log.Info('GetThumb - Url: ' + url)

    data = scraper.get(url).content

    return DataObject(data, 'image/jpeg')
  except Exception, e:
    Log.Info('GetThumb - Error: ' + str(e))

    return Redirect(R(ICON))

#
# Get thumbnail using Plex's built-in HTTP.Request
def GetThumbUsingPlex(url):
  try:
    Log.Info('GetThumbUsingPlex - Url: ' + url)

    data = HTTP.Request(url, cacheTime = CACHE_1MONTH).content

    return DataObject(data, 'image/jpeg')
  except Exception, e:
    Log.Info('GetThumbUsingPlex - Error: ' + str(e))

    return Redirect(R(ICON))